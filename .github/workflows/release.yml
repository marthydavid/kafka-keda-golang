name: release

on:
  push:
    branches:
      - "main"
    tags:
      - "*.*.*"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  # build-binary:
  #   permissions:
  #     contents: read
  #     packages: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4.1.0
  #     - name: Install cross-complier for linux/arm64
  #       run: sudo apt install -y gcc-aarch64-linux-gnu
  #     - name: Release
  #       uses: goreleaser/goreleaser-action@v5
  #       with:
  #         args: release --skip-publish --config .go-releaser.yaml
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Upload
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: kafka-keda-golang
  #         path: dist/kafka-keda-golang*

#      - name: Scan for vulnerabilities
#        id: scan
#        uses: crazy-max/ghaction-container-scan@v2
#        with:
#          image: ${{ steps.meta.outputs.tags }}
#          dockerfile: ./Dockerfile
#
#      - name: Upload SARIF file
#        if: ${{ steps.scan.outputs.sarif != '' }}
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}

  build-docker:
#    needs: build-binary
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./consumer
            image: ghcr.io/marthydavid/kafka-keda-golang-consumer
          - context: ./producer
            image: ghcr.io/marthydavid/kafka-keda-golang-producer
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ matrix.image }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6.15.0
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          provenance: false
          sbom: false
